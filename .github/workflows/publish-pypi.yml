name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        
    - name: Extract version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $VERSION"
        else
          echo "Not a tag, using version from pyproject.toml"
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        fi
        
    - name: Update version in files
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        echo "Updating version to: $VERSION"
        
        # Update pyproject.toml
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        
        # Update setup.py
        sed -i "s/version=\".*\"/version=\"$VERSION\"/" setup.py
        
        # Update __init__.py files
        find src -name "__init__.py" -exec sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" {} \;
        
        # Update licenses file
        sed -i "s/ssh-tools-suite.*|.*|/ssh-tools-suite            | $VERSION       |/" licenses/THIRD_PARTY_LICENSES.md
        
    - name: Build package
      run: |
        python -m build
        
    - name: Verify package contents
      run: |
        python -m tarfile --list dist/*.tar.gz
        python -c "import zipfile; z = zipfile.ZipFile(list(__import__('pathlib').Path('dist').glob('*.whl'))[0]); print('\\n'.join(z.namelist()))"
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
