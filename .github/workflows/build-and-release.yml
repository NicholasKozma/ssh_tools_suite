name: Build Executables and Attach to Release

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-executables:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Extract version from tag
      id: get_version
      shell: bash
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        else
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        fi
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -e .
        
    - name: Build SSH Tunnel Manager executable
      run: |
        pyinstaller --onedir --windowed --name="SSH-Tunnel-Manager" --add-data="src/ssh_tunnel_manager/gui/assets;assets" --hidden-import=tkinter --hidden-import=subprocess --hidden-import=threading --hidden-import=json --hidden-import=logging --clean ssh_tunnel_manager_app.py
        
    - name: Build SSH Tools Installer executable  
      run: |
        pyinstaller --onedir --windowed --name="SSH-Tools-Installer" --hidden-import=tkinter --hidden-import=subprocess --hidden-import=threading --hidden-import=json --hidden-import=logging --clean third_party_installer_app.py
        
    - name: Create ZIP archives
      shell: pwsh
      run: |
        $version = "${{ steps.get_version.outputs.VERSION }}"
        Compress-Archive -Path "dist/SSH-Tunnel-Manager" -DestinationPath "dist/SSH-Tunnel-Manager-v$version-Windows.zip"
        Compress-Archive -Path "dist/SSH-Tools-Installer" -DestinationPath "dist/SSH-Tools-Installer-v$version-Windows.zip"
        
    - name: Upload executables to release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
      with:
        files: |
          dist/SSH-Tunnel-Manager-v${{ steps.get_version.outputs.VERSION }}-Windows.zip
          dist/SSH-Tools-Installer-v${{ steps.get_version.outputs.VERSION }}-Windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
